{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nconst util = require('util');\nconst createError = require('http-errors');\nconst httpAssert = require('http-assert');\nconst delegate = require('delegates');\nconst statuses = require('statuses');\nconst Cookies = require('cookies');\nconst COOKIES = Symbol('context#cookies');\n\n/**\n * Context prototype.\n */\n\nconst proto = module.exports = {\n  /**\n   * util.inspect() implementation, which\n   * just returns the JSON output.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  inspect() {\n    if (this === proto) return this;\n    return this.toJSON();\n  },\n  /**\n   * Return JSON representation.\n   *\n   * Here we explicitly invoke .toJSON() on each\n   * object, as iteration will otherwise fail due\n   * to the getters and cause utilities such as\n   * clone() to fail.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  toJSON() {\n    return {\n      request: this.request.toJSON(),\n      response: this.response.toJSON(),\n      app: this.app.toJSON(),\n      originalUrl: this.originalUrl,\n      req: '<original node req>',\n      res: '<original node res>',\n      socket: '<original node socket>'\n    };\n  },\n  /**\n   * Similar to .throw(), adds assertion.\n   *\n   *    this.assert(this.user, 401, 'Please login!');\n   *\n   * See: https://github.com/jshttp/http-assert\n   *\n   * @param {Mixed} test\n   * @param {Number} status\n   * @param {String} message\n   * @api public\n   */\n\n  assert: httpAssert,\n  /**\n   * Throw an error with `status` (default 500) and\n   * `msg`. Note that these are user-level\n   * errors, and the message may be exposed to the client.\n   *\n   *    this.throw(403)\n   *    this.throw(400, 'name required')\n   *    this.throw('something exploded')\n   *    this.throw(new Error('invalid'))\n   *    this.throw(400, new Error('invalid'))\n   *\n   * See: https://github.com/jshttp/http-errors\n   *\n   * Note: `status` should only be passed as the first parameter.\n   *\n   * @param {String|Number|Error} err, msg or status\n   * @param {String|Number|Error} [err, msg or status]\n   * @param {Object} [props]\n   * @api public\n   */\n\n  throw() {\n    throw createError(...arguments);\n  },\n  /**\n   * Default error handling.\n   *\n   * @param {Error} err\n   * @api private\n   */\n\n  onerror(err) {\n    // don't do anything if there is no error.\n    // this allows you to pass `this.onerror`\n    // to node-style callbacks.\n    if (null == err) return;\n\n    // When dealing with cross-globals a normal `instanceof` check doesn't work properly.\n    // See https://github.com/koajs/koa/issues/1466\n    // We can probably remove it once jest fixes https://github.com/facebook/jest/issues/2549.\n    const isNativeError = Object.prototype.toString.call(err) === '[object Error]' || err instanceof Error;\n    if (!isNativeError) err = new Error(util.format('non-error thrown: %j', err));\n    let headerSent = false;\n    if (this.headerSent || !this.writable) {\n      headerSent = err.headerSent = true;\n    }\n\n    // delegate\n    this.app.emit('error', err, this);\n\n    // nothing we can do here other\n    // than delegate to the app-level\n    // handler and log.\n    if (headerSent) {\n      return;\n    }\n    const {\n      res\n    } = this;\n\n    // first unset all headers\n    /* istanbul ignore else */\n    if (typeof res.getHeaderNames === 'function') {\n      res.getHeaderNames().forEach(name => res.removeHeader(name));\n    } else {\n      res._headers = {}; // Node < 7.7\n    }\n\n    // then set those specified\n    this.set(err.headers);\n\n    // force text/plain\n    this.type = 'text';\n    let statusCode = err.status || err.statusCode;\n\n    // ENOENT support\n    if ('ENOENT' === err.code) statusCode = 404;\n\n    // default to 500\n    if ('number' !== typeof statusCode || !statuses[statusCode]) statusCode = 500;\n\n    // respond\n    const code = statuses[statusCode];\n    const msg = err.expose ? err.message : code;\n    this.status = err.status = statusCode;\n    this.length = Buffer.byteLength(msg);\n    res.end(msg);\n  },\n  get cookies() {\n    if (!this[COOKIES]) {\n      this[COOKIES] = new Cookies(this.req, this.res, {\n        keys: this.app.keys,\n        secure: this.request.secure\n      });\n    }\n    return this[COOKIES];\n  },\n  set cookies(_cookies) {\n    this[COOKIES] = _cookies;\n  }\n};\n\n/**\n * Custom inspection implementation for newer Node.js versions.\n *\n * @return {Object}\n * @api public\n */\n\n/* istanbul ignore else */\nif (util.inspect.custom) {\n  module.exports[util.inspect.custom] = module.exports.inspect;\n}\n\n/**\n * Response delegation.\n */\n\ndelegate(proto, 'response').method('attachment').method('redirect').method('remove').method('vary').method('has').method('set').method('append').method('flushHeaders').access('status').access('message').access('body').access('length').access('type').access('lastModified').access('etag').getter('headerSent').getter('writable');\n\n/**\n * Request delegation.\n */\n\ndelegate(proto, 'request').method('acceptsLanguages').method('acceptsEncodings').method('acceptsCharsets').method('accepts').method('get').method('is').access('querystring').access('idempotent').access('socket').access('search').access('method').access('query').access('path').access('url').access('accept').getter('origin').getter('href').getter('subdomains').getter('protocol').getter('host').getter('hostname').getter('URL').getter('header').getter('headers').getter('secure').getter('stale').getter('fresh').getter('ips').getter('ip');","map":{"version":3,"names":["util","require","createError","httpAssert","delegate","statuses","Cookies","COOKIES","Symbol","proto","module","exports","inspect","toJSON","request","response","app","originalUrl","req","res","socket","assert","throw","onerror","err","isNativeError","Object","prototype","toString","call","Error","format","headerSent","writable","emit","getHeaderNames","forEach","name","removeHeader","_headers","set","headers","type","statusCode","status","code","msg","expose","message","length","Buffer","byteLength","end","cookies","keys","secure","_cookies","custom","method","access","getter"],"sources":["/Users/namadatzis/Documents/Proyecto Web/nomad/Nomad/node_modules/koa/lib/context.js"],"sourcesContent":["\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst util = require('util');\nconst createError = require('http-errors');\nconst httpAssert = require('http-assert');\nconst delegate = require('delegates');\nconst statuses = require('statuses');\nconst Cookies = require('cookies');\n\nconst COOKIES = Symbol('context#cookies');\n\n/**\n * Context prototype.\n */\n\nconst proto = module.exports = {\n\n  /**\n   * util.inspect() implementation, which\n   * just returns the JSON output.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  inspect() {\n    if (this === proto) return this;\n    return this.toJSON();\n  },\n\n  /**\n   * Return JSON representation.\n   *\n   * Here we explicitly invoke .toJSON() on each\n   * object, as iteration will otherwise fail due\n   * to the getters and cause utilities such as\n   * clone() to fail.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  toJSON() {\n    return {\n      request: this.request.toJSON(),\n      response: this.response.toJSON(),\n      app: this.app.toJSON(),\n      originalUrl: this.originalUrl,\n      req: '<original node req>',\n      res: '<original node res>',\n      socket: '<original node socket>'\n    };\n  },\n\n  /**\n   * Similar to .throw(), adds assertion.\n   *\n   *    this.assert(this.user, 401, 'Please login!');\n   *\n   * See: https://github.com/jshttp/http-assert\n   *\n   * @param {Mixed} test\n   * @param {Number} status\n   * @param {String} message\n   * @api public\n   */\n\n  assert: httpAssert,\n\n  /**\n   * Throw an error with `status` (default 500) and\n   * `msg`. Note that these are user-level\n   * errors, and the message may be exposed to the client.\n   *\n   *    this.throw(403)\n   *    this.throw(400, 'name required')\n   *    this.throw('something exploded')\n   *    this.throw(new Error('invalid'))\n   *    this.throw(400, new Error('invalid'))\n   *\n   * See: https://github.com/jshttp/http-errors\n   *\n   * Note: `status` should only be passed as the first parameter.\n   *\n   * @param {String|Number|Error} err, msg or status\n   * @param {String|Number|Error} [err, msg or status]\n   * @param {Object} [props]\n   * @api public\n   */\n\n  throw(...args) {\n    throw createError(...args);\n  },\n\n  /**\n   * Default error handling.\n   *\n   * @param {Error} err\n   * @api private\n   */\n\n  onerror(err) {\n    // don't do anything if there is no error.\n    // this allows you to pass `this.onerror`\n    // to node-style callbacks.\n    if (null == err) return;\n\n    // When dealing with cross-globals a normal `instanceof` check doesn't work properly.\n    // See https://github.com/koajs/koa/issues/1466\n    // We can probably remove it once jest fixes https://github.com/facebook/jest/issues/2549.\n    const isNativeError =\n      Object.prototype.toString.call(err) === '[object Error]' ||\n      err instanceof Error;\n    if (!isNativeError) err = new Error(util.format('non-error thrown: %j', err));\n\n    let headerSent = false;\n    if (this.headerSent || !this.writable) {\n      headerSent = err.headerSent = true;\n    }\n\n    // delegate\n    this.app.emit('error', err, this);\n\n    // nothing we can do here other\n    // than delegate to the app-level\n    // handler and log.\n    if (headerSent) {\n      return;\n    }\n\n    const { res } = this;\n\n    // first unset all headers\n    /* istanbul ignore else */\n    if (typeof res.getHeaderNames === 'function') {\n      res.getHeaderNames().forEach(name => res.removeHeader(name));\n    } else {\n      res._headers = {}; // Node < 7.7\n    }\n\n    // then set those specified\n    this.set(err.headers);\n\n    // force text/plain\n    this.type = 'text';\n\n    let statusCode = err.status || err.statusCode;\n\n    // ENOENT support\n    if ('ENOENT' === err.code) statusCode = 404;\n\n    // default to 500\n    if ('number' !== typeof statusCode || !statuses[statusCode]) statusCode = 500;\n\n    // respond\n    const code = statuses[statusCode];\n    const msg = err.expose ? err.message : code;\n    this.status = err.status = statusCode;\n    this.length = Buffer.byteLength(msg);\n    res.end(msg);\n  },\n\n  get cookies() {\n    if (!this[COOKIES]) {\n      this[COOKIES] = new Cookies(this.req, this.res, {\n        keys: this.app.keys,\n        secure: this.request.secure\n      });\n    }\n    return this[COOKIES];\n  },\n\n  set cookies(_cookies) {\n    this[COOKIES] = _cookies;\n  }\n};\n\n/**\n * Custom inspection implementation for newer Node.js versions.\n *\n * @return {Object}\n * @api public\n */\n\n/* istanbul ignore else */\nif (util.inspect.custom) {\n  module.exports[util.inspect.custom] = module.exports.inspect;\n}\n\n/**\n * Response delegation.\n */\n\ndelegate(proto, 'response')\n  .method('attachment')\n  .method('redirect')\n  .method('remove')\n  .method('vary')\n  .method('has')\n  .method('set')\n  .method('append')\n  .method('flushHeaders')\n  .access('status')\n  .access('message')\n  .access('body')\n  .access('length')\n  .access('type')\n  .access('lastModified')\n  .access('etag')\n  .getter('headerSent')\n  .getter('writable');\n\n/**\n * Request delegation.\n */\n\ndelegate(proto, 'request')\n  .method('acceptsLanguages')\n  .method('acceptsEncodings')\n  .method('acceptsCharsets')\n  .method('accepts')\n  .method('get')\n  .method('is')\n  .access('querystring')\n  .access('idempotent')\n  .access('socket')\n  .access('search')\n  .access('method')\n  .access('query')\n  .access('path')\n  .access('url')\n  .access('accept')\n  .getter('origin')\n  .getter('href')\n  .getter('subdomains')\n  .getter('protocol')\n  .getter('host')\n  .getter('hostname')\n  .getter('URL')\n  .getter('header')\n  .getter('headers')\n  .getter('secure')\n  .getter('stale')\n  .getter('fresh')\n  .getter('ips')\n  .getter('ip');\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}